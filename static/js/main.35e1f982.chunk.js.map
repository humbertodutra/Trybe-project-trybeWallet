{"version":3,"sources":["pages/wallet.png","pages/Login.js","actions/index.js","components/Header.jsx","services/apiData.js","components/Expenditure.jsx","components/Table.jsx","pages/Wallet.js","App.js","serviceWorker.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","Login","props","onAnyChangeInInput","target","name","value","setState","verifyForm","state","email","password","length","match","disabled","redirect","history","sendMail","push","this","className","src","logo","alt","data-testid","type","onChange","placeholder","onClick","React","Component","connect","dispatch","data","Header","total","wallet","reduce","acc","currency","exchangeRates","parseInt","ask","toFixed","user","expenses","toDelete","currenciesApi","a","fetch","apiResponse","json","then","Object","keys","splice","console","log","allFetched","response","forEach","Error","Expenditure","handleChange","submitExpenses","addExepenses","currenciesAll","currencies","description","paymentMethod","category","expenditureToBeAdded","includes","parseFloat","replace","method","tag","htmlFor","id","map","curr","key","expense","Table","deletedExpenditure","deleteExpenditure","toDeleted","filter","split","index","Wallet","sendCurrencies","x","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","INITIAL_STATE","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","basename","process","document","getElementById","URL","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.35e1f982.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wallet.6408b500.png\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { setEmail } from '../actions';\nimport './login.css';\nimport logo from './wallet.png';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      disabled: true,\n    };\n  }\n\n  onAnyChangeInInput= ({ target: { name, value } }) => {\n    this.setState({\n      [name]: value,\n    }, this.verifyForm());\n  }\n\n  verifyForm= () => {\n    const regex = /^[a-z0-9.]+@[a-z0-9]+\\.[a-z]+(\\.[a-z]+)?$/i;\n    const { email, password } = this.state;\n    const five = 5;\n\n    if (password.length >= five && email.match(regex)) {\n      return this.setState({\n        disabled: false,\n      });\n    }\n    return this.setState({\n      disabled: true,\n    });\n  }\n\n  redirect= () => {\n    const { email } = this.state;\n    const { history, sendMail } = this.props;\n    sendMail(email);\n    history.push('/carteira');\n  }\n\n  render() {\n    const { email, password, disabled } = this.state;\n    return (\n      <main className=\"main-login\">\n        <img src={ logo } alt=\"logo\" className=\"logo\" />\n        <h1 className=\"welcome\"> Welcome to the TrybeWallet </h1>\n        <form className=\"main-form\">\n          <input\n            data-testid=\"email-input\"\n            type=\"text\"\n            name=\"email\"\n            onChange={ this.onAnyChangeInInput }\n            value={ email }\n            className=\"input-login\"\n            placeholder=\"email\"\n          />\n          <input\n            data-testid=\"password-input\"\n            type=\"password\"\n            value={ password }\n            name=\"password\"\n            onChange={ this.onAnyChangeInInput }\n            className=\"input-password\"\n            placeholder=\"password\"\n          />\n          <button\n            type=\"button\"\n            disabled={ disabled }\n            onClick={ this.redirect }\n            className=\"btn-login\"\n          >\n            Entrar\n          </button>\n        </form>\n      </main>\n    );\n  }\n}\n\nLogin.propTypes = {\n  sendMail: propTypes.func.isRequired,\n  history: propTypes.shape({\n    push: propTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  sendMail: (data) => dispatch(setEmail(data)),\n});\n\n// export default connect(null, mapDispatchToProps)(Login);\nexport default connect(null, mapDispatchToProps)(Login);\n","// Coloque aqui suas actions\n\nexport const setEmail = (email) => ({\n  type: 'SET_USER_EMAIL',\n  email,\n});\n\nexport const setCurrencies = (currencies) => ({\n  type: 'SET_CURRENCIES',\n  currencies,\n});\n\nexport const setExpenses = (expense) => ({\n  type: 'SET_EXPENSES',\n  expense,\n});\n\nexport const deleteExpenses = (expense) => ({\n  type: 'DELETE_EXPENSES',\n  expense,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './Header.css'\n\nclass Header extends React.Component {\n  render() {\n    const { email, wallet } = this.props;\n    const total = wallet.reduce((acc, { value, currency, exchangeRates }) => acc\n      + (parseInt(value, 10) * exchangeRates[currency].ask), 0);\n    return (\n      <header className=\"Header\">\n        <div className=\"email-field\" data-testid=\"email-field\">{`${email}`}</div>\n        <p data-testid=\"total-field\" className=\"total-field\">\n          { `Total de desepesas:  R$ ${total ? total.toFixed(2) : 0}`}\n        </p>\n        <p className=\"currency\" data-testid=\"header-currency-field\">Moeda: BRL</p>\n      </header>\n\n    );\n  }\n}\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  wallet: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  wallet: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(Header);\n","const toDelete = ['USDT'];\n\nexport const currenciesApi = async () => {\n  try {\n    const apiResponse = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const data = await apiResponse.json()\n      .then((a) => Object.keys(a));\n    data.splice(1, 1);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const allFetched = async () => {\n  try {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const data = await response.json();\n    if (toDelete.length > 0) {\n      toDelete.forEach((currency) => delete data[currency]);\n    }\n    return data;\n  } catch (err) {\n    throw new Error(err);\n  }\n};\nexport default currenciesApi;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropType from 'prop-types';\nimport { allFetched } from '../services/apiData';\nimport { setExpenses } from '../actions/index';\nimport './expenditure.css';\n\nclass Expenditure extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: 0,\n      description: '',\n      currency: 'USD',\n      paymentMethod: 'Cartão de crédito',\n      category: 'Alimentação',\n      currencies: [],\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitExpenses = async () => {\n    const { addExepenses } = this.props;\n    const currenciesAll = await allFetched();\n    this.setState({\n      currencies: currenciesAll,\n    });\n    const {\n      value,\n      description,\n      currency,\n      paymentMethod,\n      category,\n      currencies,\n    } = this.state;\n\n    const total = () => {\n      if (value === 0) {\n        const totalFormated = 0;\n        return totalFormated;\n      } if (value.includes(',')) {\n        const totalFormated = parseFloat(value.replace(',', '.'));\n        return totalFormated;\n      }\n      const totalFormated = parseFloat(value);\n      return totalFormated;\n    };\n\n    const expenditureToBeAdded = {\n      value: total(),\n      description,\n      currency,\n      method: paymentMethod,\n      tag: category,\n      exchangeRates: currencies,\n    };\n    addExepenses(expenditureToBeAdded);\n  };\n\n  render() {\n    const { currencies } = this.props;\n    const { value } = this.state;\n    return (\n      <main className=\"expenditure-main\">\n        <form className=\"expenditure-form\">\n          <label htmlFor=\"value\" className=\"label-expenditure\">\n            Valor de despesa:\n            <input\n              data-testid=\"value-input\"\n              name=\"value\"\n              id=\"value\"\n              onChange={ this.handleChange }\n              value={ value }\n              className=\"input-expenditure-value\"\n            />\n          </label>\n\n          <label htmlFor=\"value\" className=\"label-expenditure\">\n            Descrição\n            <input\n              data-testid=\"description-input\"\n              type=\"text\"\n              name=\"description\"\n              onChange={ this.handleChange }\n              className=\"input-expenditure-description\"\n            />\n          </label>\n\n          <label htmlFor=\"Moeda\" className=\"label-expenditure\">\n            Moeda:\n            <select\n              className=\"select-expenditure\"\n              name=\"currency\"\n              data-testid=\"currency-input\"\n              id=\"Moeda\"\n              onChange={ this.handleChange }\n            >\n              {currencies.map((curr) => (\n                <option key={ curr } value={ curr }>\n                  {curr}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          <label htmlFor=\"method-input\" className=\"label-expenditure\">\n            Metodo de pagamento\n            <select\n              data-testid=\"method-input\"\n              onChange={ this.handleChange }\n              name=\"paymentMethod\"\n              id=\"method-input\"\n              className=\"select-expenditure\"\n            >\n              <option>Cartão de crédito</option>\n              <option>Dinheiro</option>\n              <option>Cartão de débito</option>\n            </select>\n          </label>\n\n          <label htmlFor=\"category\" className=\"label-expenditure\">\n            Categoria de despesa:\n            <select\n              name=\"category\"\n              data-testid=\"tag-input\"\n              onChange={ this.handleChange }\n              id=\"category\"\n              className=\"select-expenditure\"\n            >\n              <option>Alimentação</option>\n              <option>Lazer</option>\n              <option>Trabalho</option>\n              <option>Transporte</option>\n              <option>Saúde</option>\n            </select>\n          </label>\n\n          <button\n            onClick={ this.submitExpenses }\n            type=\"button\"\n            className=\"button-expenditure\"\n          >\n            Adicionar despesa\n          </button>\n        </form>\n      </main>\n    );\n  }\n}\n\nExpenditure.propTypes = {\n  addExepenses: PropType.func,\n  currencies: PropType.arrayOf(PropType.object).isRequired,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addExepenses: (expenses) => dispatch(setExpenses(expenses)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Expenditure);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteExpenses } from '../actions/index';\nimport './table.css';\n\nclass Table extends React.Component {\n  deletedExpenditure = (id) => {\n    const { expenses, deleteExpenditure } = this.props;\n    const toDeleted = expenses.filter((expense) => expense.id !== id);\n    console.log(toDeleted);\n    deleteExpenditure(toDeleted);\n  };\n\n  render() {\n    const { expenses } = this.props;\n    return (\n      <div className=\"tableDiv\">\n        <h2 className=\"table-title\"> Tabela de gastos </h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Descrição</th>\n              <th>Tag</th>\n              <th>Método de pagamento</th>\n              <th>Valor</th>\n              <th>Moeda</th>\n              <th>Câmbio utilizado</th>\n              <th>Valor convertido</th>\n              <th>Moeda de conversão</th>\n              <th>Excluir</th>\n            </tr>\n          </thead>\n          <tbody>\n            {expenses.map(\n              ({\n                description,\n                tag,\n                method,\n                value,\n                currency,\n                exchangeRates,\n                id,\n              }) => (\n                <tr key={ id }>\n                  <td>{description}</td>\n                  <td>{tag}</td>\n                  <td>{method}</td>\n                  <td>{parseFloat(value).toFixed(2)}</td>\n                  <td>{exchangeRates[currency].name.split('/')[0]}</td>\n                  <td>\n                    {parseFloat(exchangeRates[currency].ask).toFixed(2)}\n                    {' '}\n                  </td>\n                  <td>{(value * exchangeRates[currency].ask).toFixed(2)}</td>\n                  <td>Real</td>\n                  <td>\n                    <button\n                      data-testid=\"delete-btn\"\n                      type=\"button\"\n                      onClick={ () => this.deletedExpenditure(id) }\n                    >\n                      Excluir\n                    </button>\n                  </td>\n                </tr>\n              ),\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object),\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteExpenditure: (index) => dispatch(deleteExpenses(index)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport Header from '../components/Header';\nimport { currenciesApi } from '../services/apiData';\nimport { setCurrencies } from '../actions';\nimport Expenditure from '../components/Expenditure';\nimport Table from '../components/Table';\nimport './login.css';\n\nclass Wallet extends React.Component {\n  async componentDidMount() {\n    const { sendCurrencies } = this.props;\n    const x = await currenciesApi();\n    sendCurrencies(x);\n  }\n\n  render() {\n    return (\n      <div className=\"wallet-div\">\n        <Header />\n        <Expenditure />\n        <Table />\n      </div>\n    );\n  }\n}\nWallet.propTypes = {\n  sendCurrencies: propTypes.func.isRequired,\n};\nconst mapDispatchToProps = (dispatch) => ({\n  sendCurrencies: (data) => dispatch(setCurrencies(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(Wallet);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nfunction App() {\n  return (\n\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/carteira\" component={ Wallet } />\n    </Switch>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst SET_USER_EMAIL = 'SET_USER_EMAIL';\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_USER_EMAIL:\n    return {\n      ...state,\n      email: action.email,\n    };\n  default: return state;\n  }\n};\n\nexport default user;\n","const INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n};\n\nconst DELETE_EXPENSES = 'DELETE_EXPENSES';\nconst SET_CURRENCIES = 'SET_CURRENCIES';\nconst SET_EXPENSES = 'SET_EXPENSES';\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_CURRENCIES:\n    return {\n      ...state,\n      currencies: action.currencies,\n    };\n  case SET_EXPENSES:\n    return {\n      ...state,\n      expenses: [...state.expenses, { id: state.expenses.length, ...action.expense }],\n    };\n  case DELETE_EXPENSES:\n    return {\n      ...state,\n      expenses: action.expense,\n    };\n\n  default: return state;\n  }\n};\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n\nconst rootReducer = combineReducers({\n  user,\n  wallet,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/index';\n\nReactDOM.render(\n  <HashRouter basename={ process.env.PUBLIC_URL }>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}